name: Deploy agent Os Instance

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build Agent Binaries - Windows amd64
        run: |
          cd cmd/agent
          GOOS=windows GOARCH=amd64 go build -o agent-windows-amd64.exe main.go
      
      - name: Build Agent Binaries - Linux amd64 and arm64
        run: |
          cd cmd/agent
          GOOS=linux GOARCH=arm64 go build -o agent-linux-arm64 main.go
          GOOS=linux GOARCH=amd64 go build -o agent-linux-amd64 main.go
      
      - name: Build Agent Binaries - macOS amd64 and arm64
        run: |
          cd cmd/agent
          GOOS=darwin GOARCH=arm64 go build -o agent-macos-arm64 main.go
          GOOS=darwin GOARCH=amd64 go build -o agent-macos-amd64 main.go

      - name: Build Manager Binaries - Windows amd64
        run: |
          cd cmd/manager
          GOOS=windows GOARCH=amd64 go build -o manager-windows-amd64.exe main.go
      
      - name: Build Manager Binaries - Linux amd64 and arm64
        run: |
          cd cmd/manager
          GOOS=linux GOARCH=arm64 go build -o manager-linux-arm64 main.go
          GOOS=linux GOARCH=amd64 go build -o manager-linux-amd64 main.go

      - name: Build Manager Binaries - macOS amd64 and arm64
        run: |
          cd cmd/manager
          GOOS=darwin GOARCH=arm64 go build -o manager-macos-arm64 main.go
          GOOS=darwin GOARCH=amd64 go build -o manager-macos-amd64 main.go

      - name: Build Updater Binaries - Windows amd64
        run: |
          cd cmd/updater
          GOOS=windows GOARCH=amd64 go build -o updater-windows-amd64.exe main.go

      - name: Build Updater Binaries - Linux amd64 and arm64
        run: |
          cd cmd/updater
          GOOS=linux GOARCH=arm64 go build -o updater-linux-arm64 main.go
          GOOS=linux GOARCH=amd64 go build -o updater-linux-amd64 main.go

      - name: Build Updater Binaries - macOS amd64 and arm64
        run: |
          cd cmd/updater
          GOOS=darwin GOARCH=arm64 go build -o updater-macos-arm64 main.go
          GOOS=darwin GOARCH=amd64 go build -o updater-macos-amd64 main.go
      - name: Organize Release Assets
        run: |
          # Create directories for organized release
          mkdir -p release/manager
          mkdir -p release/agent
          mkdir -p release/updater
          
          # Copy manager binaries with organized structure
          cp cmd/manager/manager-windows-amd64.exe release/manager/
          cp cmd/manager/manager-linux-amd64 release/manager/
          cp cmd/manager/manager-linux-arm64 release/manager/
          cp cmd/manager/manager-macos-amd64 release/manager/
          cp cmd/manager/manager-macos-arm64 release/manager/
          
          # Copy agent binaries with organized structure
          cp cmd/agent/agent-windows-amd64.exe release/agent/
          cp cmd/agent/agent-linux-amd64 release/agent/
          cp cmd/agent/agent-linux-arm64 release/agent/
          cp cmd/agent/agent-macos-amd64 release/agent/
          cp cmd/agent/agent-macos-arm64 release/agent/

          # Copy updater binaries with organized structure
          cp cmd/updater/updater-windows-amd64.exe release/updater/
          cp cmd/updater/updater-linux-amd64 release/updater/
          cp cmd/updater/updater-linux-arm64 release/updater/
          cp cmd/updater/updater-macos-arm64 release/updater/
          cp cmd/updater/updater-macos-amd64 release/updater/

      - name: Organize Installer Assets
        run: |
          # Create directories for organized release
          mkdir -p release/installer
          
          # Copy manager installers linux
          cp installers/install_manager_linux.sh release/installer/
          cp installers/uninstall_manager_linux.sh release/installer/

          # Copy manager installers macos
          cp installers/install_manager_macos.sh release/installer/
          cp installers/uninstall_manager_macos.sh release/installer/

          # Copy agent installers linux
          cp installers/install_agent_linux.sh release/installer/
          cp installers/uninstall_agent_linux.sh release/installer/

          # Copy agent installers macos
          cp installers/install_agent_macos.sh release/installer/
          cp installers/uninstall_agent_macos.sh release/installer/

          # Copy updater installers linux
          cp installers/install_updater_linux.sh release/installer/
          cp installers/uninstall_updater_linux.sh release/installer/

          # Copy updater installers macos
          cp installers/install_updater_macos.sh release/installer/
          cp installers/uninstall_updater_macos.sh release/installer/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/manager/manager-windows-amd64.exe
            release/manager/manager-linux-amd64
            release/manager/manager-linux-arm64
            release/manager/manager-macos-amd64
            release/manager/manager-macos-arm64
            release/agent/agent-windows-amd64.exe
            release/agent/agent-linux-amd64
            release/agent/agent-linux-arm64
            release/agent/agent-macos-amd64
            release/agent/agent-macos-arm64
            release/updater/updater-windows-amd64.exe
            release/updater/updater-linux-amd64
            release/updater/updater-linux-arm64
            release/updater/updater-macos-amd64
            release/updater/updater-macos-arm64
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
